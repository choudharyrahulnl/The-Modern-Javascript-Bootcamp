// BROWSER HAS ITS API'S WHICH JS USES FOR ASYNC CALL LIKE MAKE API CALL OR SET TIME OUT ...
// JS ASK BROWSER TO TAKE CARE OF ASYNC CALLS
// ONCE DONE BROWSER PUT THAT CALL BACK FUNCTION ON JS CALL STACK
// BROWSER DOESN'T PUT THE CALL BACK FUNCTION DIRECTLY ON CALL STACK INSTEAD IT USES CALLBACK QUEUE
// BROWSER PUT CALL BACK FUNCTION IN CALL BACK QUEUE AND JS WILL TAKE IT FROM CALLBACK QUEUE TO CALL STACK
// WHENEVER JS IS IDLE

// SET TIMEOUT: ASYNC FUNCTION
// IF WE NEED TO DO SOMETHING AFTER FIST ASYNC FINISH WE NEED TO NEST IT LIKE THIS
const btn = document.querySelector('button');
setTimeout(() => {
    btn.style.transform = `translateX(100px)`;

    setTimeout(() => {
        btn.style.transform = `translateX(200px)`;

        setTimeout(() => {
            btn.style.transform = `translateX(300px)`;
        },1000);
    },1000);
},1000);